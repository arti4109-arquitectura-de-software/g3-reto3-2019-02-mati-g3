buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()

}

ext['springCloudVersion'] = 'Greenwich.SR2'

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')

	compile('org.springframework.cloud:spring-cloud-config-server')
	compile('org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config')

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.mockito:mockito-core:2.8.9')
	testImplementation('junit:junit:4.12')
	testImplementation('org.powermock:powermock-api-mockito2:1.7.1')
	testImplementation('org.powermock:powermock-module-junit4:1.7.4')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


install {
	repositories.mavenInstaller {
		pom.version = "${version}"
	}
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

build.finalizedBy jacocoTestReport


install {
	repositories.mavenInstaller {
		pom.version = "${version}"
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}
